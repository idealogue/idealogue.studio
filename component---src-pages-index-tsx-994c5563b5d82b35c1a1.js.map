{"version":3,"file":"component---src-pages-index-tsx-994c5563b5d82b35c1a1.js","mappings":"yJAGO,MAAMA,E,QAAYC,QAAOC,IAAG,gEAAVD,CAAU,0MAIVE,EAAAA,GAIAC,EAAAA,GAIAC,EAAAA,GAIAC,EAAAA,G,oMCRV,SAASC,IACpB,OACIC,EAAAA,cAACC,EAAAA,EAAM,CAACC,QAASC,GACbH,EAAAA,cAACI,EAAI,KACDJ,EAAAA,cAACR,EAAAA,EAAS,KACNQ,EAAAA,cAACK,EAAI,KAAC,aACNL,EAAAA,cAAAA,IAAAA,KAAG,iGAIHA,EAAAA,cAACM,EAAY,KAAC,YACdN,EAAAA,cAACO,EAAAA,EAAQ,CAACC,SAAO,GACZC,EAAAA,GAAOC,KAAI,CAACC,EAAMC,IACfZ,EAAAA,cAACa,EAAAA,SAAQ,CAACC,IAAKH,GACXX,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACe,EAAAA,EAAI,CAACC,GAAIC,EAAAA,GAAYC,IAAIC,EAAAA,EAAAA,IAAmBR,GAAMS,MAC9CD,EAAAA,EAAAA,IAAmBR,GAAMU,eAGhCT,EAAQ,GAAK,GAAM,GAAKZ,EAAAA,cAACsB,EAAS,UAIhDtB,EAAAA,cAACM,EAAY,KAAC,QACdN,EAAAA,cAACO,EAAAA,EAAQ,KACLP,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACe,EAAAA,EAAI,CAACC,GAAIC,EAAAA,GAAYC,GAAG,UAAS,cAK1ClB,EAAAA,cAACuB,EAAM,KACHvB,EAAAA,cAAAA,IAAAA,KAAG,0BAEC,2BAAM,iBAEN,2BAAM,mBAGVA,EAAAA,cAAAA,IAAAA,KAAG,WACU,IACTA,EAAAA,cAACe,EAAAA,EAAI,CACDS,KAAK,yBACLC,IAAI,sBACJC,OAAO,UACV,WAGD1B,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAACe,EAAAA,EAAI,CACDS,KAAK,mDACLC,IAAI,sBACJC,OAAO,UACV,iBAEO,IAAI,yBAEZ,2BACA1B,EAAAA,cAACe,EAAAA,EAAI,CACDS,KAAK,6CACLC,IAAI,sBACJC,OAAO,UACV,WAEO,IAAI,sBAGhB1B,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAACe,EAAAA,EAAI,CAACC,GAAG,IAAIQ,KAAK,4BAA2B,YAG7CxB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAACe,EAAAA,EAAI,CACDS,KAAK,iDACLC,IAAI,sBACJC,OAAO,UACV,mBAGD1B,EAAAA,cAAAA,KAAAA,MAAM,aACU,IAChBA,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,MAAM,aAAW,WAAU,UASlE,CAEO,MAAMC,EAAOA,IACT5B,EAAAA,cAAC6B,EAAAA,EAAG,MAGTxB,EAAOZ,EAAAA,QAAOqC,GAAE,YAAAT,YAAAA,cAAAU,YAAAA,eAATtC,CAAS,sMAChBuC,EAAAA,EAAAA,IAAK,kBAOcpC,EAAAA,GAKAC,EAAAA,IAMnBS,EAAeb,EAAAA,QAAOwC,GAAE,YAAAZ,YAAAA,sBAAAU,YAAAA,eAATtC,CAAS,kSAULG,EAAAA,GAKAC,EAAAA,IAMnB0B,EAAS9B,EAAAA,QAAOyC,OAAM,YAAAb,YAAAA,gBAAAU,YAAAA,eAAbtC,CAAa,0XAiBHG,EAAAA,GAWAC,EAAAA,IAMnBO,EAAOX,EAAAA,QAAOC,IAAG,YAAA2B,YAAAA,cAAAU,YAAAA,eAAVtC,CAAU,mNAeEI,EAAAA,IAOnByB,EAAY7B,EAAAA,QAAO0C,GAAE,YAAAd,YAAAA,mBAAAU,YAAAA,eAATtC,CAAS,+BAIrBU,GAAYiC,EAAAA,EAAAA,KAAG,wD","sources":["webpack://idealogue/./src/components/shared/Container.tsx","webpack://idealogue/./src/pages/index.tsx"],"sourcesContent":["import { LG, MD, SM, XL } from '$utils/css'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    padding: 0 32px;\n\n    @media (min-width: ${SM}px) {\n        max-width: 510px;\n    }\n\n    @media (min-width: ${MD}px) {\n        max-width: 690px;\n    }\n\n    @media (min-width: ${LG}px) {\n        max-width: 835px;\n    }\n\n    @media (min-width: ${XL}px) {\n        max-width: 870px;\n    }\n`\n","import { LG, MD, font } from '$utils/css'\nimport { Link as GatsbyLink } from 'gatsby'\nimport React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Container } from '~/components/shared/Container'\nimport { Layout } from '~/components/shared/Layout'\nimport { Link } from '~/components/shared/Link'\nimport { LinkList } from '~/components/shared/Menu'\nimport { getProjectManifest, lineup } from '~/utils/project'\nimport { Seo } from '../components/Seo'\n\nexport default function IndexPage() {\n    return (\n        <Layout rootCss={layoutCss}>\n            <Root>\n                <Container>\n                    <Logo>Idealogue</Logo>\n                    <p>\n                        We work with startups to create software with personality and digital\n                        products we believe in.\n                    </p>\n                    <SectionLabel>Projects</SectionLabel>\n                    <LinkList $inline>\n                        {lineup.map((name, index) => (\n                            <Fragment key={name}>\n                                <li>\n                                    <Link as={GatsbyLink} to={getProjectManifest(name).url}>\n                                        {getProjectManifest(name).displayName}\n                                    </Link>\n                                </li>\n                                {(index + 1) % 3 === 0 && <Separator />}\n                            </Fragment>\n                        ))}\n                    </LinkList>\n                    <SectionLabel>Team</SectionLabel>\n                    <LinkList>\n                        <li>\n                            <Link as={GatsbyLink} to=\"/team/\">\n                                About us\n                            </Link>\n                        </li>\n                    </LinkList>\n                    <Footer>\n                        <p>\n                            Suite 113, 5 Ilhan Lane\n                            <br />\n                            Brunswick 3056\n                            <br />\n                            Naarm Australia\n                        </p>\n                        <p>\n                            Build by{' '}\n                            <Link\n                                href=\"https://www.mariusz.io\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                Mariusz\n                            </Link>\n                            <br />\n                            <Link\n                                href=\"https://lettersfromsweden.se/font/lab-grotesque/\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                Lab Grotesque\n                            </Link>{' '}\n                            by Letters from Sweden\n                            <br />\n                            <Link\n                                href=\"https://commercialtype.com/catalog/publico\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                Publico\n                            </Link>{' '}\n                            by Commercial Type\n                        </p>\n                        <p>\n                            <Link as=\"a\" href=\"mailto:matt@idealogue.io\">\n                                Email us\n                            </Link>\n                            <br />\n                            <Link\n                                href=\"https://bsky.app/profile/mattinnes.bsky.social\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                Matt on Bluesky\n                            </Link>\n                            <br />\n                            That&apos;s all{' '}\n                            <span role=\"img\" aria-label=\"Cheers!\">\n                                &#x270c;&#xfe0f;{/* âœŒ */}\n                            </span>\n                        </p>\n                    </Footer>\n                </Container>\n            </Root>\n        </Layout>\n    )\n}\n\nexport const Head = () => {\n    return <Seo />\n}\n\nconst Logo = styled.h1`\n    ${font('publico banner')}\n\n    font-size: 28px;\n    font-weight: 700;\n    line-height: normal;\n    margin: 0 0 108px;\n\n    @media (min-width: ${MD}px) {\n        font-size: 40px;\n        margin-bottom: 68px;\n    }\n\n    @media (min-width: ${LG}px) {\n        font-size: 56px;\n        margin-bottom: 168px;\n    }\n`\n\nconst SectionLabel = styled.h2`\n    border-bottom: 1px solid rgba(235, 235, 235, 1);\n    color: #9ea39e;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    margin: 118px 0 20px;\n    padding: 0 0 16px;\n\n    @media (min-width: ${MD}px) {\n        font-size: 24px;\n        margin: 108px 0 24px;\n    }\n\n    @media (min-width: ${LG}px) {\n        font-size: 30px;\n        margin: 256px 0 32px;\n    }\n`\n\nconst Footer = styled.footer`\n    border-top: 1px solid rgba(235, 235, 235, 1);\n    color: rgba(158, 163, 158, 1);\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 24px;\n    padding: 32px 0 72px;\n    margin-top: 128px;\n\n    p {\n        font-weight: 500;\n    }\n\n    p + p {\n        margin-top: 8px;\n    }\n\n    @media (min-width: ${MD}px) {\n        display: flex;\n        justify-content: space-between;\n        padding: 56px 0 88px;\n        margin-top: 128px;\n\n        p + p {\n            margin: 0;\n        }\n    }\n\n    @media (min-width: ${LG}px) {\n        font-size: 16px;\n        margin-top: 256px;\n    }\n`\n\nconst Root = styled.div`\n    color: #06042a;\n    font-size: 28px;\n    font-weight: bold;\n    line-height: 50px;\n    padding-top: 122px;\n\n    p {\n        margin: 0;\n    }\n\n    p a {\n        text-decoration: none !important;\n    }\n\n    @media (min-width: ${LG}px) {\n        font-size: 50px;\n        line-height: 72px;\n        padding-top: 208px;\n    }\n`\n\nconst Separator = styled.li`\n    display: block !important;\n`\n\nconst layoutCss = css`\n    --Layout_Background: #fcfcfc;\n    --Layout_Color: #06042a;\n`\n"],"names":["Container","styled","div","SM","MD","LG","XL","IndexPage","React","Layout","rootCss","layoutCss","Root","Logo","SectionLabel","LinkList","$inline","lineup","map","name","index","Fragment","key","Link","as","GatsbyLink","to","getProjectManifest","url","displayName","Separator","Footer","href","rel","target","role","Head","Seo","h1","componentId","font","h2","footer","li","css"],"sourceRoot":""}